<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>GF1_6S</title>
    <link href="/2024/09/12/GF1-6S/"/>
    <url>/2024/09/12/GF1-6S/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近在处理GF1号数据，主要使用6S大气校正进行处理。具体代码参见<a href="https://github.com/Zhaoguanhua/AtmosphericCorrection">Zhaoguanhua</a>大佬的实现。</p><h2 id="明确参数的意义"><a href="#明确参数的意义" class="headerlink" title="明确参数的意义"></a>明确参数的意义</h2><p>参考<a href="https://blog.csdn.net/VickyChenVC/article/details/107861708">6S大气校正原理</a></p><h2 id="6S参数的设置"><a href="#6S参数的设置" class="headerlink" title="6S参数的设置"></a>6S参数的设置</h2><p>优先读取头文件信息参数。2022年之后的GF1数据应该是改版了。可以用ENVI的国产卫星工具打开，能正常识别参数。或者在<a href="https://data.cresda.cn/#/home">陆地观测卫星</a>查看影像具体信息。可以自行对比头文件在考虑是否修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 传感器类型 自定义</span><br>s.geometry = Geometry.User()<br>s.geometry.solar_z = <span class="hljs-number">90</span>-<span class="hljs-built_in">float</span>(dom.getElementsByTagName(<span class="hljs-string">&#x27;SolarZenith&#x27;</span>)[<span class="hljs-number">0</span>].firstChild.data)<br>s.geometry.solar_a = <span class="hljs-built_in">float</span>(dom.getElementsByTagName(<span class="hljs-string">&#x27;SolarAzimuth&#x27;</span>)[<span class="hljs-number">0</span>].firstChild.data)<br><span class="hljs-comment"># s.geometry.view_z = float(dom.getElementsByTagName(&#x27;SatelliteZenith&#x27;)[0].firstChild.data)</span><br><span class="hljs-comment"># s.geometry.view_a = float(dom.getElementsByTagName(&#x27;SatelliteAzimuth&#x27;)[0].firstChild.data)</span><br>s.geometry.view_z = <span class="hljs-number">0</span><br>s.geometry.view_a = <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>考虑调整为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 传感器类型 自定义</span><br>s.geometry = Geometry.User()<br><span class="hljs-comment"># 2022年之后的数据头文件中SolarZenith为太阳天顶角。不需要90-</span><br><span class="hljs-comment"># s.geometry.solar_z = 90-float(dom.getElementsByTagName(&#x27;SolarZenith&#x27;)[0].firstChild.data)</span><br>s.geometry.solar_z = <span class="hljs-built_in">float</span>(dom.getElementsByTagName(<span class="hljs-string">&#x27;SolarZenith&#x27;</span>)[<span class="hljs-number">0</span>].firstChild.data)<br>s.geometry.solar_a = <span class="hljs-built_in">float</span>(dom.getElementsByTagName(<span class="hljs-string">&#x27;SolarAzimuth&#x27;</span>)[<span class="hljs-number">0</span>].firstChild.data)<br><span class="hljs-comment"># 读取头文件信息进行计算</span><br>s.geometry.view_z = <span class="hljs-built_in">float</span>(dom.getElementsByTagName(<span class="hljs-string">&#x27;SatelliteZenith&#x27;</span>)[<span class="hljs-number">0</span>].firstChild.data)<br>s.geometry.view_a = <span class="hljs-built_in">float</span>(dom.getElementsByTagName(<span class="hljs-string">&#x27;SatelliteAzimuth&#x27;</span>)[<span class="hljs-number">0</span>].firstChild.data)<br><span class="hljs-comment"># s.geometry.view_z = 0</span><br><span class="hljs-comment"># s.geometry.view_a = 0</span><br></code></pre></td></tr></table></figure><h2 id="其他参数设置"><a href="#其他参数设置" class="headerlink" title="其他参数设置"></a>其他参数设置</h2><p>参考<a href="https://blog.csdn.net/VickyChenVC/article/details/107861708">6S大气校正原理</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 气溶胶类型大陆</span><br>s.aero_profile = AtmosProfile.PredefinedType(AeroProfile.Continental)<br><br><span class="hljs-comment"># 下垫面类型</span><br>s.ground_reflectance = GroundReflectance.HomogeneousLambertian(<span class="hljs-number">0.36</span>)<br><br><span class="hljs-comment"># 550nm气溶胶光学厚度,对应能见度为40km</span><br>s.aot550 = <span class="hljs-number">0.14497</span><br></code></pre></td></tr></table></figure><h2 id="json文件更新"><a href="#json文件更新" class="headerlink" title="json文件更新"></a>json文件更新</h2><p>定标系数以及光谱响应函数下载：<a href="https://www.cresda.com/zgzywxyyzx/zlxz/article/20240416163618563132683.html">资源卫星应用中心</a></p><p>具体更新方法：<a href="https://blog.csdn.net/qq_15038823/article/details/140120644?spm=1001.2101.3001.6650.2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-2-140120644-blog-110977519.235%5Ev43%5Epc_blog_bottom_relevance_base7">自定义光谱响应函数</a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">在“RadiometricCorrectionParameter.json”的相应位置添加不同传感器、不同波段对应的Gain、Offset值，以及高分六号的光谱响应函数（SRF）数值，SRF需要按照官网提供的1nm间隔插值制作为2.5nm间隔的<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>GF1_WFV预处理</title>
    <link href="/2024/09/01/GF1-WFV%E9%A2%84%E5%A4%84%E7%90%86/"/>
    <url>/2024/09/01/GF1-WFV%E9%A2%84%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#1%E8%BE%85%E5%8A%A9%E6%95%B0%E6%8D%AE">1.辅助数据</a></li><li><a href="#2%E6%AD%A3%E5%B0%84%E6%A0%A1%E6%AD%A3">2.正射校正</a></li><li><a href="#3%E5%A4%A7%E6%B0%94%E6%A0%A1%E6%AD%A3">3.大气校正</a></li><li><a href="#%E5%8F%82%E8%80%83">参考</a></li></ul><h2 id="1、辅助数据"><a href="#1、辅助数据" class="headerlink" title="1、辅助数据"></a>1、辅助数据</h2><p>在进行GF1_WFV预处理之前，需要辅助数据：</p><ul><li>参考影像数据：Landsat8全色波段拼接影像。</li><li>DEM数据：数字高程模型数据。</li></ul><p>从服务器下载辅助数据到本地：<br><img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17252611594571725261159281.png"></p><h2 id="2、正射校正"><a href="#2、正射校正" class="headerlink" title="2、正射校正"></a>2、正射校正</h2><p>2.1、安装插件（App store搜索框搜关键词）：<strong>中国国产卫星支持工具</strong>；<strong>ENVI55自动找点正射校正批处理工具</strong></p><p><img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17252615054511725261504759.png"></p><p>2.2、批量正射校正</p><p>a.使用国产卫星支持工具打开GF1_WFV数据，自动识别元数据。</p><p><img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17252617108761725261710852.png"></p><p>b.批量正射校正</p><p>打开RPC Orthorectification Using Reference Image Batch，</p><p><img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17252619484511725261948302.png"></p><p>导入数据设置参数（注意<strong>DEM不要使用ENVI自带</strong>的，使用从服务器下载的。<strong>输出大小选择16</strong>。设置输出路径，其他保持不变）</p><p><img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17252623984511725262398330.png"></p><h2 id="3、大气校正"><a href="#3、大气校正" class="headerlink" title="3、大气校正"></a>3、大气校正</h2><p>3.1、辐射定标</p><p>a.安装插件（App store搜索框搜关键词）：新版图像批处理工具包V5.5</p><p><img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17252627475941725262747542.png"></p><p>b.批量辐射定标（QUAC大气校正不应用Flaash设置）：选择批量正射校正后的数据，参数保持默认，设置输出路径。</p><p><img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17252631695851725263169511.png"></p><p>c.批量快速大气校正（QUAC）：批量选择定标后的数据，其他参数默认，设置输出路径。</p><p><img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17252635064491725263505578.png"></p><p>d.上传QUAC结果</p><p><img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17252637546541725263754634.png"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.cnblogs.com/enviidl/p/16553338.html">大气校正</a></li><li><a href="https://www.cnblogs.com/enviidl/p/16542676.html">正射校正</a></li><li><a href="https://blog.csdn.net/qq_42121168/article/details/115464531">高分数据预处理</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Remote Sensing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python-learn</title>
    <link href="/2024/06/06/Python-learn/"/>
    <url>/2024/06/06/Python-learn/</url>
    
    <content type="html"><![CDATA[<p>Python中的类和对象</p><!-- 解释python中的类 --><p>举个例子</p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Landsat-8 to Sentinel-2</title>
    <link href="/2024/05/29/Landsat-8%20to%20Sentinel-2/"/>
    <url>/2024/05/29/Landsat-8%20to%20Sentinel-2/</url>
    
    <content type="html"><![CDATA[<!-- 写一个目录 --><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#1">1.协调反射率</a></li><li><a href="#2">2.红边波段补全</a></li><li><a href="#3">3.下游产品的影响</a></li><li><a href="#4">4.长时序高分辨率定量遥感应用</a></li></ul><h2 id="1-协调反射率（可用方案）"><a href="#1-协调反射率（可用方案）" class="headerlink" title="1.协调反射率（可用方案）"></a>1.协调反射率<a id="1"></a>（可用方案）</h2><h3 id="1-1-Sen2like（https-github-com-senbox-org-sen2like）"><a href="#1-1-Sen2like（https-github-com-senbox-org-sen2like）" class="headerlink" title="1.1 Sen2like（https://github.com/senbox-org/sen2like）"></a>1.1 Sen2like（<a href="https://github.com/senbox-org/sen2like%EF%BC%89">https://github.com/senbox-org/sen2like）</a></h3><!-- 首行空两格 --><p style="text-indent: 2em;">Sen2Like处理器是一个旨在结合Sentinel-2和Landsat-8数据，创建多时相无缝地表反射率数据集的工具。它使用Sentinel-2作为参考任务，并结合所有输入数据来创建一个虚拟星座。此外，Sen2Like还涉及几何校正、方向效应校正和数据融合等方面的处理。        <h3 id="1-2-HLS-https-search-earthdata-nasa-gov-search-q-9HLSS30-9"><a href="#1-2-HLS-https-search-earthdata-nasa-gov-search-q-9HLSS30-9" class="headerlink" title="1.2 HLS(https://search.earthdata.nasa.gov/search?q=%9HLSS30%9)"></a>1.2 HLS(<a href="https://search.earthdata.nasa.gov/search?q=%259HLSS30%259">https://search.earthdata.nasa.gov/search?q=%9HLSS30%9</a>)</h3><p style="text-indent: 2em;">Harmonized Landsat Sentinel-2 (HLS) 项目提供了一致的地表反射率（SR）数据，这些数据来源于美国宇航局（NASA）和美国地质调查局（USGS）联合发射的Landsat 8和Landsat 9卫星上的操作型陆地成像仪（OLI），以及欧洲哥白尼Sentinel-2A和Sentinel-2B卫星上的多光谱仪（MSI）。通过综合测量，该项目能够每2到3天以30米的空间分辨率对全球陆地进行观测。HLSS30和HLSL30产品以相同的分辨率和军事网格参考系统（MGRS）的瓦片形式进行网格化，并且这些产品可以“堆叠”用于时间序列分析。<h3 id="1-3-SpecHomo（https-github-com-GFZ-spechomo）"><a href="#1-3-SpecHomo（https-github-com-GFZ-spechomo）" class="headerlink" title="1.3 SpecHomo（https://github.com/GFZ/spechomo）"></a>1.3 SpecHomo（<a href="https://github.com/GFZ/spechomo%EF%BC%89">https://github.com/GFZ/spechomo）</a></h3><p style="text-indent: 2em;">SpecHomo用于多光谱卫星数据的光谱同质化。它可以将一个传感器的光谱信息转换为另一个传感器的光谱域。SpecHomo提供了不同的机器学习技术来预测目标传感器的光谱信息。目前，已经实现了多元线性回归、多元二次回归和随机森林回归。为了与最简单的同质化方法进行简单比较，还实现了线性光谱插值。<p style="text-indent: 2em;">与之前的光谱同质化技术相比，SpecHomo不仅允许应用全局（波段式）转换，即使用相同的预测系数对光谱波段的所有灰度值进行转换。它还通过使用针对各种光谱集群专门训练的预测系数，区分了不同地表覆盖类型的个体光谱特性。这提高了预测光谱信息的准确性。此外，SpecHomo不仅可以用于同质化已经相似的光谱定义，还允许预测单方面缺失的波段，例如Landsat-8数据中不存在的红边波段。<p style="text-indent: 2em;">预测精度以及对后续产品（如光谱指数或分类）的影响需要考虑光谱波长、源和目标传感器的光谱特性相似度、光谱位置以及光谱特征形状等多个因素。这些因素共同决定了协调后图像数据的质量和预测的准确性。<h3 id="1-4-ESRCNN（https-github-com-MrCPlusPlus-ESRCNN-for-Landsat8-Sentinel2-Fusion）"><a href="#1-4-ESRCNN（https-github-com-MrCPlusPlus-ESRCNN-for-Landsat8-Sentinel2-Fusion）" class="headerlink" title="1.4 ESRCNN（https://github.com/MrCPlusPlus/ESRCNN-for-Landsat8-Sentinel2-Fusion）"></a>1.4 ESRCNN（<a href="https://github.com/MrCPlusPlus/ESRCNN-for-Landsat8-Sentinel2-Fusion%EF%BC%89">https://github.com/MrCPlusPlus/ESRCNN-for-Landsat8-Sentinel2-Fusion）</a></h3><p style="text-indent: 2em;">超分辨率卷积神经网络（ESRCNN），专门用于混合Landsat-8 Operational Land Imager（OLI）和Sentinel-2 Multispectral Imager（MSI）数据。精度评估显示，融合网络的性能受输入的辅助Sentinel-2图像的数量和辅助Sentinel-2图像与目标Landsat-8图像之间的时间间隔（即图像采集日期的差异）的影响。<h3 id="1-5-CGAN（https-github-com-Rohit18-Landsat8-Sentinel2-Fusion）"><a href="#1-5-CGAN（https-github-com-Rohit18-Landsat8-Sentinel2-Fusion）" class="headerlink" title="1.5 CGAN（https://github.com/Rohit18/Landsat8-Sentinel2-Fusion）"></a>1.5 CGAN（<a href="https://github.com/Rohit18/Landsat8-Sentinel2-Fusion%EF%BC%89">https://github.com/Rohit18/Landsat8-Sentinel2-Fusion）</a></h3><p style="text-indent: 2em;">生成对抗网络（GAN）能够以监督的方式学习目标数据集（Sentinel-2）的数据分布，并将来自输入数据集（Landsat 8）的样本转换为复制目标数据集（Sentinel-2）中相应样本的样本。我们将训练一个GAN来学习红边波段的数据分布，这些信息来自与Sentinel-2红边波段信息最接近的Landsat 8波段（绿波段用于红边1，近红外波段用于红边2和红边3）。<h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><h3 id="1-1-Sen2like"><a href="#1-1-Sen2like" class="headerlink" title="1.1 Sen2like"></a>1.1 Sen2like</h3><p>L2H_30m。需要同区域的Sentinel-2进行融合得到L2F_10_20m    </p><div style="text-align:center;">    <img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17169506560661716950655983.png"     style="width:80%;height:auto;"></div><h3 id="1-2-SpecHomo"><a href="#1-2-SpecHomo" class="headerlink" title="1.2 SpecHomo"></a>1.2 SpecHomo</h3><p>30m。QR:Quadratic Regression、LR:Linear Regression、L8C2L2</p><div style="text-align:center;">    <img src="https://fastly.jsdelivr.net/gh/bingoodog/picture@main/img/17169510320691716951031563.png"     style="width:80%;height:auto;"></div><h3 id="1-3-CGAN"><a href="#1-3-CGAN" class="headerlink" title="1.3 CGAN"></a>1.3 CGAN</h3><p style="text-indent: 2em;">使用fastai中集成的GAN进行训练。版本太老，重新使用最新的fastai.vision.gan方法重写模型。模型训练数据组织形式未知。<h3 id="1-4-ESRCNN"><a href="#1-4-ESRCNN" class="headerlink" title="1.4 ESRCNN"></a>1.4 ESRCNN</h3><p>超分辨率网络，学习源码，暂无思路。</p><h3 id="1-5-其他方法"><a href="#1-5-其他方法" class="headerlink" title="1.5 其他方法"></a>1.5 其他方法</h3><p><a href="https://github.com/wawancenggoro/cnn_l8_s2">cnn_l8_s2</a></p><p><a href="https://github.com/venkatesh-thiru/Deep-Harmonization">deep-harmonization</a></p><p><a href="https://github.com/egronskaya/Super-Resolution-for-Satellite-Imagery">Super-Resolution-for-Satellite-Imagery</a></p><!-- 清理缓存并发布 --><!-- hexo clean && hexo g && hexo d -->]]></content>
    
    
    
    <tags>
      
      <tag>Remote Sensing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My First Post</title>
    <link href="/2024/04/17/My-First-Post/"/>
    <url>/2024/04/17/My-First-Post/</url>
    
    <content type="html"><![CDATA[<!-- 写一个blog通用目录 --><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code class="hljs">    hexo是一个基于Node.js的静态博客框架，使用Markdown编写文章，然后通过hexo生成静态网页。hexo有很多主题可以选择，可以根据自己的喜好选择一个合适的主题。</code></pre><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre><code class="hljs">    安装hexo需要先安装Node.js和Git，然后使用npm安装hexo。</code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><pre><code class="hljs">    配置hexo需要修改一些配置文件，比如_config.yml。</code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre><code class="hljs">    新建一个博客文件，然后使用hexo命令生成静态网页。</code></pre><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><pre><code class="hljs">    发布博客需要先将生成的静态网页上传到GitHub或者其他代码托管平台。</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>开放课题申请</title>
    <link href="/2024/04/13/%E5%BC%80%E6%94%BE%E8%AF%BE%E9%A2%98/"/>
    <url>/2024/04/13/%E5%BC%80%E6%94%BE%E8%AF%BE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>课题意义：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">湖泊生态系统对维护生物多样性、提供饮用水资源及休闲娱乐等方面发挥着不可替代的作用。然而，水体污染导致的富营养化已成为全球性环境问题。叶绿素<span class="hljs-selector-tag">a</span>浓度是反映水体富营养化程度的关键指标。传统的监测方法依赖大量手工取样和实验室分析，费时费力且无法实现实时监测。<br>随着遥感技术的发展，利用空间光学遥感进行叶绿素<span class="hljs-selector-tag">a</span>浓度的远程监测成为一种新趋势。但现有方法在精度和适应性方面仍存在不足，难以满足实际应用需求。AI技术，特别是深度学习，为解决这一问题提供了新的可能。本项目提出使用亚马逊Autogluon智能框架，结合最新的光学遥感技术，开发出一种新的叶绿素<span class="hljs-selector-tag">a</span>浓度反演模型，以提供更加准确和实用的湖泊水体监测方法。<br></code></pre></td></tr></table></figure><p>研究目标：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">本项目旨在开发一种基于亚马逊Autogluon的智能框架，通过光学遥感数据快速、准确反演湖泊水体叶绿素<span class="hljs-selector-tag">a</span>浓度，提升现有技术的精确性和普适性，以支持环境监测和水质管理。<br></code></pre></td></tr></table></figure><p>研究内容：</p><p>（1）研究并选择适合湖泊水体叶绿素a浓度反演的遥感数据类型和特征；<br>（2）基于亚马逊Autogluon，开发适合的数据预处理和模型训练流程，利用深度学习技术处理复杂的遥感数据；<br>（3）构建和训练多种机器学习模型，评估其在叶绿素a浓度反演中的表现，并选出最优模型；<br>（4）通过实地采集的湖泊水样数据验证模型准确性，分析模型在不同类型的湖泊环境中的适用性和稳定性；<br>（5）综合研究结果，形成一套完整的叶绿素a浓度反演方法论，并开发相应的软件或工具，提升湖泊水质监测的效率和准确性。</p><p>考核指标：</p><p>（1）成功开发基于亚马逊Autogluon的叶绿素a浓度反演模型；<br>（2）模型在多个湖泊数据集上的平均准确率达到90%以上；<br>（3）发表至少1篇相关领域的高水平科学论文；<br>（4）形成一套完整的操作手册，包括软件工具或平台，用于湖泊水质的实时监测和分析。</p><p>预期成果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">包括技术文件类成果、高水平文章、实物类成果，具体为基于亚马逊Autogluon的叶绿素<span class="hljs-selector-tag">a</span>浓度反演模型，相关的科学论文发表，以及开发的软件工具或平台，用于辅助环境科学家和管理部门更有效地监测和管理湖泊水质。<br></code></pre></td></tr></table></figure><p>主题词：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">湖泊水体、叶绿素<span class="hljs-selector-tag">a</span>浓度、空间光学遥感、亚马逊Autogluon、智能框架    <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo_fig</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>评价指标</title>
    <link href="/2024/04/06/%E5%B8%B8%E7%94%A8%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/"/>
    <url>/2024/04/06/%E5%B8%B8%E7%94%A8%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h2 id="评价指标"><a href="#评价指标" class="headerlink" title="评价指标"></a>评价指标</h2><span id="more"></span><p><strong>均方根误差</strong>：</p><p>$RMSE &#x3D; \sqrt{\frac{1}{n} \sum_{i&#x3D;1}^{n} (y_i - \hat{y_i})^2}$</p><p><strong>平均平方误差</strong>：</p><p>$MSE &#x3D; \frac{1}{n} \sum_{i&#x3D;1}^{n} (y_i - \hat{y_i})^2$</p><p><strong>平均绝对误差</strong>：</p><p>$MAE &#x3D; \frac{1}{n} \sum_{i&#x3D;1}^{n} |y_i - \hat{y_i}|$</p><p><strong>R^2</strong>：</p><p>$R^2 &#x3D; 1 - \frac{\sum_{i&#x3D;1}^{n} (y_i - \hat{y_i})^2}{\sum_{i&#x3D;1}^{n} (y_i - \bar{y})^2}$</p><p><strong>皮尔森相关系数</strong>：</p><p>$PearsonR &#x3D; \frac{\sum_{i&#x3D;1}^{n} (y_i - \bar{y})(\hat{y_i} - \bar{\hat{y}})}{\sqrt{\sum_{i&#x3D;1}^{n} (y_i - \bar{y})^2} \sqrt{\sum_{i&#x3D;1}^{n} (\hat{y_i} - \bar{\hat{y}})^2}}$</p><p><strong>中位数绝对误差</strong>：</p><p>$MedAE &#x3D; median(|y_i - \hat{y_i}|)$</p><p><strong>符号说明</strong>：</p><p>$n$：测试数据集中的样本数量</p><p>$y_i$：第 $i$ 个样本的真实值</p><p>$\hat{y_i}$：第 $i$ 个样本的预测值</p><p>$\bar{y}$：测试数据集的真实值的平均值</p><p>$\bar{\hat{y}}$：测试数据集的预测值的平均值</p><p><strong>注意</strong>：</p><ul><li>对于值越高代表越差的指标，AutoGluon 会将其值打印为负值。</li><li>在实际应用中，需要根据具体的业务需求选择合适的评价指标。</li></ul><p><strong>参考资料</strong>：</p><ul><li>AutoGluon 文档: <a href="https://auto.gluon.ai/stable/index.html">autogluon</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hello-world</title>
    <link href="/2024/04/06/hello-world/"/>
    <url>/2024/04/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>!<span id="more"></span>This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
